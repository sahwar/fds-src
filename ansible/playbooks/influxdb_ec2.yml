---
-   name: Deploy InfluxDB to EC2
    connection: local
    hosts: localhost
    gather_facts: False
    vars_files:
    -   ../vars_files/credentials/aws_fds_testing.yml
    -   ../vars_files/credentials/fds-deploy_rsa.yml

    tasks:

    -   name: create InfluxDB node security group
        ec2_group:
            name: influxdb
            state: present
            description: "InfluxDB Nodes"
            region: us-west-2
            aws_access_key: "{{ aws_access_key }}"
            aws_secret_key: "{{ aws_secret_key }}"
            rules:
              - proto: tcp
                from_port: 8083
                to_port: 8083
                cidr_ip: 0.0.0.0/0
              - proto: tcp
                from_port: 8086
                to_port: 8086
                cidr_ip: 0.0.0.0/0
              - proto: tcp
                from_port: 22
                to_port: 22
                cidr_ip: 0.0.0.0/0
              - proto: icmp
                from_port: -1
                to_port: -1
                cidr_ip: 0.0.0.0/0
        register: influxdb_node_sg

    -   name: create Elastic Load Balancer instance for InfluxDB
        ec2_elb_lb:
            name: "influxdb-elb"
            state: present
            aws_access_key: "{{ aws_access_key }}"
            aws_secret_key: "{{ aws_secret_key }}"
            connection_draining_timeout: 10
            listeners:
                - protocol: http
                  load_balancer_port: 8083
                  instance_port: 8083
                - protocol: http
                  load_balancer_port: 8086
                  instance_port: 8086
            health_check:
                ping_protocol: tcp 
                ping_port: 8086
#                ping_path: "/db/?u=root&p=root"
                response_timeout: 2
                interval: 5 # seconds
                unhealthy_threshold: 2
                healthy_threshold: 2
            region: us-west-2
            zones:
                - us-west-2a
            
    -   name: copy FDS deploy key locally
        include: ../tasks/deploy_fds/copy_fds_deploy_key.yml

    -   name: spin up a node in the private subnet with an auto-assigned IP
        ec2:
            aws_access_key: "{{ aws_access_key }}"
            aws_secret_key: "{{ aws_secret_key }}"
            instance_tags:
                fds_purpose: influxdb
            exact_count: 3
            count_tag:
                fds_purpose: influxdb
            key_name: fds-ie
            group_id:
                - "{{ influxdb_node_sg.group_id }}"
            instance_type: m3.large
            image: ami-0f114a3f
            volumes:
                -   device_name: /dev/sda2
                    volume_size: 100
                    delete_on_termination: false
            monitoring: no
            region: us-west-2
            zone: us-west-2a
            wait: yes
        register: ec2

    -   name: Add all instance public IPs to host group
        add_host: hostname={{ item.dns_name }} groupname=ec2hosts
        with_items: ec2.tagged_instances

    -   debug:
            msg: "{{ item }}"
        with_items: groups.ec2hosts

    -   name: wait for SSH to come up on all instances
        local_action: wait_for host={{ item }} port=22 delay=1 timeout=300 state=started
        with_items: groups.ec2hosts


-   name: Deploy InfluxDB
    hosts: ec2hosts
    remote_user: deploy
    gather_facts: true
    sudo: true
    vars:
        data_vg_name: datavg01
        data_vol_name: datalv01
        this_is_an_ec2_node: true
        influxdb_version: 0.8.8
    vars_files:
    -   ../vars_files/credentials/aws_fds_testing.yml

    tasks:
    -   name: gather ec2 facts
        ec2_facts:

    -   name: get InfluxDB package
        get_url: url=https://s3.amazonaws.com/influxdb/influxdb_{{ influxdb_version }}_amd64.deb
            dest=/root/influxdb_{{ influxdb_version }}_amd64.deb
            sha256sum=04f0b74ca102e2680191bbd83aa2601cd7ce1b50b3fd8aa7d7d084fa7032c492

    -   name: create influxdb user and group
        group: name=influxdb

    -   user: name=influxdb
            createhome=no
            group=influxdb

    -   name: check for data LogVol presence
        stat: path=/dev/mapper/{{data_vg_name}}-{{data_vol_name}}
        register: data_vol

    -   name: create /opt/influxdb with root ownership
        when: not data_vol.stat.exists
        file: path=/opt/influxdb
            state=directory
            owner=root
            group=root
            mode=0755

    -   name: install lvm2
        apt: name=lvm2
            state=present

    -   name: set up data VolGroup
        lvg: vg={{data_vg_name}}
            pvs=/dev/xvdb
            state=present

    -   name: set up data LogVol
        lvol: lv={{data_vol_name}}
            vg={{data_vg_name}}
            size=100%FREE

    -   name: create ext4 filesystem on data volume
        filesystem: dev=/dev/mapper/{{data_vg_name}}-{{data_vol_name}}
            fstype=ext4

    -   name: mount data volume at /opt/influxdb
        mount: name=/opt/influxdb
            src=/dev/mapper/{{data_vg_name}}-{{data_vol_name}}
            fstype=ext4
            state=mounted

    -   name: fix ownership of /opt/influxdb
        file: path=/opt/influxdb
            state=directory
            owner=influxdb
            group=influxdb
            mode=0755

    -   name: install InfluxDB
        apt: deb=/root/influxdb_{{ influxdb_version }}_amd64.deb

    -   name: ensure InfluxDB service is started
        service: name=influxdb
            state=started
            enabled=yes

    -   name: register InfluxDB node in ELB
        local_action: 
            module: ec2_elb
            aws_access_key: "{{ aws_access_key }}"
            aws_secret_key: "{{ aws_secret_key }}"
            state: present
            ec2_elbs: influxdb-elb
            instance_id: "{{ ansible_ec2_instance_id }}"
            region: us-west-2
            wait: yes
