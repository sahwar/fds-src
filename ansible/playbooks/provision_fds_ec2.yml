---
-   name: Provision 4-node FDS cluster in EC2
    connection: local
    vars:
       ec2_hosts:
          node1:
             address: 10.3.20.60
             hostname: "node1"
          node2:
             address: 10.3.20.61
             hostname: "node2"
          node3:
             address: 10.3.20.62
             hostname: "node3"
          node4:
             address: 10.3.20.63
             hostname: "node4"
          node5:
             address: 10.3.20.64
             hostname: "node5"
          node6:
             address: 10.3.20.65
             hostname: "node6"
          node7:
             address: 10.3.20.66
             hostname: "node7"
          node8:
             address: 10.3.20.67
             hostname: "node8"
          node9:
             address: 10.3.20.68
             hostname: "node9"
          node10:
             address: 10.3.20.69
             hostname: "node10"
          node11:
             address: 10.3.20.70
             hostname: "node11"
          node12:
             address: 10.3.20.71
             hostname: "node12"
          node13:
             address: 10.3.20.72
             hostname: "node13"
          node14:
             address: 10.3.20.73
             hostname: "node14"
          node15:
             address: 10.3.20.74
             hostname: "node15"
          node16:
             address: 10.3.20.75
             hostname: "node16"
          node17:
             address: 10.3.20.76
             hostname: "node17"
          node18:
             address: 10.3.20.77
             hostname: "node18"
          node19:
             address: 10.3.20.78
             hostname: "node19"
          node20:
             address: 10.3.20.79
             hostname: "node20"
          node21:
             address: 10.3.20.80
             hostname: "node21"
          node22:
             address: 10.3.20.81
             hostname: "node22"
          node23:
             address: 10.3.20.82
             hostname: "node23"
          node24:
             address: 10.3.20.83
             hostname: "node24"
          node25:
             address: 10.3.20.84
             hostname: "node25"
          node26:
             address: 10.3.20.85
             hostname: "node26"
          node27:
             address: 10.3.20.86
             hostname: "node27"
          node28:
             address: 10.3.20.87
             hostname: "node28"
          node29:
             address: 10.3.20.88
             hostname: "node29"
          node30:
             address: 10.3.20.89
             hostname: "node30"
          node31:
             address: 10.3.20.90
             hostname: "node31"
          node32:
             address: 10.3.20.91
             hostname: "node32"
    hosts: localhost
    gather_facts: False
    vars_files:
    -   ../vars_files/credentials/aws_fds_testing.yml
    -   ../vars_files/credentials/fds-deploy_rsa.yml

    tasks:

    -   name: check for instance_name_tag
        fail: msg="You must supply a value for instance_name_tag"
        when: instance_name_tag is not defined

    # -   name: check for instance_count
    #     fail: msg="You must supply a value for instance_count"
    #     when: instance_count is not defined

    -   name: copy FDS deploy key locally
        include: ../tasks/deploy_fds/copy_fds_deploy_key.yml

    -   name: spin up a node in the private subnet with an auto-assigned IP
        ec2:
            aws_access_key: "{{ aws_access_key }}"
            aws_secret_key: "{{ aws_secret_key }}"
            instance_tags:
                Name: "{{ instance_name_tag }}"
                fds_purpose: testing
            private_ip: "{{ item.value.address }}"
            count_tag:
                Name: "{{ instance_name_tag }}"
                fds_purpose: testing
            key_name: fds-ie
            group_id: sg-43b9c126
            instance_type: t2.medium
            image: ami-0f114a3f
            volumes:
                -   device_name: /dev/sda1
                    volume_size: 30
                    delete_on_termination: true
            vpc_subnet_id: subnet-195bac40
            monitoring: no
            region: us-west-2
            zone: us-west-2c
            wait: no
        register: ec2
        tags: provision
        with_dict: ec2_hosts
        ignore_errors: True

    # -   name: Add all instance public IPs to host group
    #     add_host: hostname={{ item.private_ip }} groupname={{ fds_cluster_name }}
    #     with_items: ec2.tagged_instances
    #     tags: provision

-   hosts: awo-bh-01
    name: stage debs on awo-bh-01 and wait for cluster to be available for deployment
    remote_user: deploy
    gather_facts: false
    sudo: false
    tags: wait

    tasks:

    -   name: set variable build defined in inventory file (release or debug)
        set_fact:
            build: "{% if fds_build is defined and fds_build == 'debug' %}dbg{% else %}rel{% endif %}"
        tags:
          - install-local

    -   name: create staging directory on awo-bh-01 to house local fds_platform deb
        when: deploy_artifact == "local"
        file: path=/home/deploy/deb_staging/{{ instance_name_tag }}
                state=directory
        tags:
          - install-local

    -   name: stage local fds-platform deb on awo-bh-01
        when: deploy_artifact == "local"
        file: path=/home/deploy/deb_staging/{{ instance_name_tag }}
                state=directory
        tags:
          - install-local

    -   name: stage local fds-platform deb on awo-bh-01
        when: deploy_artifact == "local"
        copy: src={{ item }}
          dest=/home/deploy/deb_staging/{{ instance_name_tag }}/fds-platform.deb
        with_fileglob:
          - '../../omnibus/omnibus-fds-platform/pkg/fds-platform-*{{ build }}*.deb'
        tags:
          - install-local

    -   name: stage local fds-deps deb on awo-bh-01
        when: fds_deploy_local_deps is defined and fds_deploy_local_deps == "yes"
        copy: src={{ item }}
          dest=/home/deploy/deb_staging/{{ instance_name_tag }}/fds-deps.deb
        with_fileglob:
          - '../../omnibus/omnibus-fds-deps/pkg/fds-deps*.deb'
        tags:
          - install-local

    -   name: wait for SSH to come up on all instances
        wait_for: host={{ item }} port=22 delay=1 timeout=300 state=started
        with_items: groups.{{ fds_cluster_name }}

-   name: Deploy FDS
    hosts: "{{ fds_cluster_name }}"
    remote_user: deploy
    gather_facts: true
    sudo: true
    vars:
       this_is_an_ec2_node: true
    vars_files:
    -   ../vars_files/multi_om_setup.yml
    -   ../vars_files/credentials/ssl_certs.yml
    -   ../vars_files/deploy_fds/admin_credentials.yml
    -   ../vars_files/deploy_fds/start_fds.yml

    handlers:
    -   name: restart ssh
        service: name=ssh
            state=restarted

    tasks:

    -   include: ../tasks/deploy_fds/deploy_fds.yml
