---
-   name: sysctl_params
    sysctl: name={{ item.key }} value={{ item.value }} state={{ item.state }}
    when: ansible_virtualization_type != "lxc"
    with_items:
        - { key: 'fs.file-max', value: '400000', state: 'present' }
        - { key: 'kernel.core_uses_pid', value: '1', state: 'present' }
        - { key: 'fs.suid_dumpable', value: '1', state: 'present' }
        - { key: 'kernel.core_pattern', value: '/corefiles/%e.%p.%u.%t.core', state: 'present' }
    tags:
        - install-deps

-   name: install_limits_conf
    template:
        src=../templates/deploy_fds/fds_limits.conf
        dest=/etc/security/limits.conf
        owner=root
        group=root
        mode=0644
    tags:
        - install-deps

-   name: ensure_corefiles_exists
    file:
        path=/corefiles
        owner=root
        group=root
        mode=0755
        state=directory
    tags:
        - install-deps

-   name: add local mirrors to /etc/hosts
    when: fds_deploy_local_deps is not defined or fds_deploy_local_deps == false
    lineinfile: dest=/etc/hosts
        line="{{item}}"
    with_items:
        -   10.3.4.128 awo-apt.formationds.com awo-apt
        -   10.2.10.22 bld-apt.formationds.com bld-apt
        -   10.1.10.50 fre-apt.formationds.com fre-apt

-   name: add artifactory repo key
    when: fds_deploy_local_deps is not defined or fds_deploy_local_deps == false
    apt_key: url="http://builder:h7qgA3fYr0P3@artifacts.artifactoryonline.com/artifacts/api/gpg/key/public"
    tags:
        - install-deps

-   name: add local fds nightly platform repo
    when: cluster_location is defined and (fds_deploy_local_deps is not defined or fds_deploy_local_deps == false)
    apt_repository: repo="deb http://{{cluster_location}}-apt.formationds.com/formation-apt platform nightly"
        state=present
        update_cache=yes
    tags:
      - install-deps

-   name: add Artifactory fds nightly platform repo
    when: cluster_location is not defined and (fds_deploy_local_deps is not defined or fds_deploy_local_deps == false)
    apt_repository: repo="deb http://builder:h7qgA3fYr0P3@artifacts.artifactoryonline.com/artifacts/formation-apt/ platform nightly"
        state=present
        update_cache=yes
    tags:
      - install-deps

-   name: install fds-deps package from repo
    when: fds_deploy_local_deps is not defined or fds_deploy_local_deps == false
    apt: name=fds-deps
        force=yes
        state=latest
        update_cache=yes
    tags:
        - install-deps

-   name: push local fds-deps deb to cluster nodes
    when: (fds_deploy_local_deps is defined and fds_deploy_local_deps == true) and this_is_an_ec2_node is not defined
    copy: src={{ item }}
       dest=/root/fds-deps.deb
    with_fileglob:
       - '../../../omnibus/omnibus-fds-deps/pkg/fds-deps*.deb'
    tags:
      - install-local

-   pause: seconds=5
    when: (fds_deploy_local_deps is defined and fds_deploy_local_deps == true) and this_is_an_ec2_node is not defined
    tags:
      - install-local

-   name: install fds deps from local deb
    when: (fds_deploy_local_deps is defined and fds_deploy_local_deps == true) and this_is_an_ec2_node is not defined
    apt: deb="/root/fds-deps.deb"
    tags:
      - install-local

-   name: push local fds-deps deb from awo-bh-01 to cluster nodes
    when: (fds_deploy_local_deps is defined and fds_deploy_local_deps == true) and (this_is_an_ec2_node is defined and this_is_an_ec2_node)
    synchronize: src="/home/deploy/deb_staging/{{ instance_name_tag }}/fds-deps.deb"
        dest="/home/deploy/fds-deps.deb"
        rsync_timeout=30 mode=push private_key="/home/deploy/.ssh/fds-deploy_rsa"
    delegate_to: awo-bh-01
    tags:
      - install-local

-   name: install fds deps from local deb (ec2)
    when: (fds_deploy_local_deps is defined and fds_deploy_local_deps == true) and (this_is_an_ec2_node is defined and this_is_an_ec2_node)
    apt: deb="/home/deploy/fds-deps.deb"
    tags:
      - install-local
