---
#-   name: disk_type
#    shell: python -m disk_type -m
#    tags:
#      - startup

-   name: start redis
    shell: ./redis.sh start chdir=/fds/sbin
    tags:
      - startup

-   name: start influxdb
    service: name=influxdb state=started
    when: fds_om_influxdb_url is defined and inventory_hostname in fds_om_influxdb_url
    tags:
        - startup

-   name: start platformd
    service: name=platformd state=started
    tags:
      - startup

-   name: wait for platformd to become available on OM host
    wait_for: host={{ fds_om_host }}
        port=7000
        delay=1
        timeout=180
        state=started
    when: fds_om_host is defined and fds_om_host == inventory_hostname
    delegate_to: localhost
    sudo: no
    tags:
      - startup

-   name: start_om
    service: name=orchmgr state=started
    when: fds_om_host is defined and fds_om_host == inventory_hostname
    tags:
      - startup

-   name: wait for api to become available
    wait_for: host={{ fds_om_host }}
        port=7777
        delay=1
        timeout=180
        state=started
    delegate_to: localhost
    sudo: no
    when: fds_om_host is defined and fds_om_host == inventory_hostname
    tags:
      - startup

-   name: wait for platformd to become available on remaining hosts
    wait_for: host={{ inventory_hostname }}
        port=7000
        delay=1
        timeout=180
        state=started
    when: fds_om_host is defined and fds_om_host != inventory_hostname
    delegate_to: localhost
    sudo: no
    tags:
      - startup

-   name: get auth token
    uri: url=http://{{ fds_om_host }}:7777/api/auth/token?login={{ domain_admin_user }}&password={{ domain_admin_pass }}
        method=POST
        return_content=yes
        status_code=200
    delegate_to: localhost
    register: auth_results
    run_once: true
    sudo: no
    tags:
      - startup

-   name: activate local domain
    uri: url=http://{{ fds_om_host }}:7777/local_domains/{{local_domain_name}}/services
        method=PUT
        body_format=json
        body="{{activate_local_domain_post_body_json}}"
        HEADER_Content-Type="application/json"
        HEADER_Cookie="token={{auth_results['json']['token']}}"
        status_code=200
        return_content=yes
    delegate_to: localhost
    run_once: true
    sudo: no
    tags:
      - startup

-   name: wait for services to be available on all nodes
    wait_for: host={{inventory_hostname}}
        port={{item}}
        delay=1
        timeout=180
        state=started
    with_items:
        - 7001
        - 7002
        - 7003
        - 8000
        - 8443
        - 8899
        - 8911
        - 9988
        - 9999
    tags:
      - startup
