#
# Copyright 2015 Formation Data Systems, Inc.
#
# Test volume create_snapshot and volume list_snapshots
#

[user]
user_name = root
password = passwd

[node1]
om = true
redis = true
influxdb = true
ip = localhost
fds_root = /fds/node1
fds_port = 7000

[node2]
enable=true
ip = localhost
fds_root = /fds/node2
fds_port = 7000

[node3]
enable=true
ip = localhost
fds_root = /fds/node3
fds_port = 7000

[node4]
enable=true
ip = localhost
fds_root = /fds/node4
fds_port = 7000

[node5]
enable=true
ip = localhost
fds_root = /fds/node5
fds_port = 7000

[node6]
enable=true
ip = localhost
fds_root = /fds/node6
fds_port = 7000

[node7]
enable=true
ip = localhost
fds_root = /fds/node7
fds_port = 7000

[node8]
enable=true
ip = localhost
fds_root = /fds/node8
fds_port = 7000

[volume1]
client = node1
id     = 1
size   = 10000
access = object

[volume2]
client = node1
id     = 2
size   = 10000
access = object

[volume3]
client = node1
id     = 3
size   = 10000000
access = block

# TEST STEPS or CASES or SCENARIOS
# Will be ordered according to scenario name.

[scenario_verify_nodes_up]
log_marker      = Verify node nodes are up
script          = [verify]
state           = up

[scenario_create_volume1]
log_marker      = Create volume volume1
script          = [volume1]
action          = create
delay_wait      = 5

[scenario_create_snapshot_1]
log_marker      = Take snapshot1 of volume1
script          = [testcases.TestFDSSnapshotMgt.TestCreateSnapshot]
param_names     = volume_name,snapshot_name,retention
params          = volume1,snap1,3600

[scenario_getAuthToken]
log_marker      = Get an S3 authorization token
script          = [testcases.TestOMIntFace.TestGetAuthToken]

[scenario2_gets3conn]
log_marker      = Get an S3 connection
script          = [testcases.TestS3IntFace.TestS3GetConn]

[scenario_vol1_IO]
log_marker      = Store verifiable object in vol-1
script          = [testcases.TestS3IntFace.TestS3LoadVerifiableObject]
param_names     = bucket
params          = volume1

[scenario_create_snapshot_2]
log_marker      = Take snapshot2 of volume1
script          = [testcases.TestFDSSnapshotMgt.TestCreateSnapshot]
param_names     = volume_name,snapshot_name,retention
params          = volume1,snap2,3600

[scenario_create_volume_clone1]
log_marker      = Create volume clone
script          = [testcases.TestFDSSnapshotMgt.TestCreateVolClone]
param_names     = volume_name,clone_name,snapshot_start,snapshot_end
params          = volume1,clone1,snap1, snap2