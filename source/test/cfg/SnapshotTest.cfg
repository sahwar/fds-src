#
# Copyright 2015 Formation Data Systems, Inc.
#
# Test volume create_snapshot and volume list_snapshots
#

[user]
user_name = root
password = passwd

[node1]
om = true
redis = true
influxdb = true
ip = localhost
fds_root = /fds/node1
fds_port = 7000

[node2]
enable=true
ip = localhost
fds_root = /fds/node2
fds_port = 7000

[node3]
enable=true
ip = localhost
fds_root = /fds/node3
fds_port = 7000

[node4]
enable=true
ip = localhost
fds_root = /fds/node4
fds_port = 7000

[node5]
enable=true
ip = localhost
fds_root = /fds/node5
fds_port = 7000

[node6]
enable=true
ip = localhost
fds_root = /fds/node6
fds_port = 7000

[node7]
enable=true
ip = localhost
fds_root = /fds/node7
fds_port = 7000

[node8]
enable=true
ip = localhost
fds_root = /fds/node8
fds_port = 7000

[volume_snapshot]
client = node1
id     = 1
size   = 10000
access = object

[volume2]
client = node1
id     = 2
size   = 10000
access = object

[volume3]
client = node1
id     = 3
size   = 10000000
access = block

# TEST STEPS or CASES or SCENARIOS
# Will be ordered according to scenario name.

[scenario_verify_nodes_up]
log_marker      = Verify node nodes are up
script          = [verify]
state           = up

[scenario_create_volume_snapshot]
log_marker      = Create volume volume_snapshot
script          = [volume_snapshot]
action          = create
delay_wait      = 5

[scenario_attach_volume]
# Attach volume volume_snapshot
log_marker      = Attach volume
script          = [volume_snapshot]
action          = attach

[scenario_get_s3_autho_token]
log_marker      = Get an S3 authorization token
script          = [testcases.TestOMIntFace.TestGetAuthToken]

[scenario_get_s3_connection]
log_marker      = Get an S3 connection
script          = [testcases.TestS3IntFace.TestS3GetConn]

[scenario_put_s3_blob]
log_marker      = Test S3 interface by putting blob
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
param_names     = bucket
params          = volume_snapshot

[scenario_fork_io_workload]
# Run some IO
log_marker      = Fork/run longer IO workload
script          = [fork]
real-script     = [testcases.TrafficGen.RunTrafficGen]
param_names     = hostname,runtime,test_type,username
params          = localhost,3000,PUT,admin
delay_wait	= 3

[scenario_create_snapshot]
log_marker      = Create snapshot for volume
script          = [volume_snapshot]
action          = create_snapshot
delay_wait      = 3

[scenario_list_snapshot]
log_marker      = List snapshot for volume
script          = [volume_snapshot]
action          = list_snapshot


[scenario_closes_s3_connection]
log_marker      = Close the S3 connection
script          = [testcases.TestS3IntFace.TestS3CloseConn]
