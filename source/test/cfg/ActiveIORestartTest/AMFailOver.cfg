#
# Copyright 2015 Formation Data Systems, Inc.
#

# TEST DESCRIPTION
# This SysTest config expects a domain to be up and running. It
# spawns some I/O aginst volumes 1 and 2, both attached currently to
# the AM on node node1. The AM on node 1 is killed. For volume1, the
# I/O process retries failed I/O and so should pick up its work
# where it left off once the AM on node1 is back.
#
# For volume2, the I/O process is designed to failover to the AM
# on node node2. So we should see volume2 become attached to the
# AM on node2 and I/O continue there.



[scenario_vol1_io_on_am1_fork]
log_marker      = Run some IO on a separate process for am1 and vol1
script          = [fork]
real-script     = [scenario]
fds-scenario    = ../cfg/S3/IO_volume1_CRD_Retry_DontVerifyDelete.cfg

[scenario_vol2_io_on_am1_fork]
log_marker      = Run some IO on a separate process for am1 and vol2
script          = [fork]
real-script     = [scenario]
fds-scenario    = ../cfg/S3/IO_volume2_CRD_DontRetry_DontVerifyDelete.cfg

[scenario_wait_let_io_get_underway]
log_marker      = Allow some time for the I/O process to get underway
script          = [testcases.TestMgt.TestWait]
param_names     = delay,reason
params          = 10,to let the I/O process to get underway

[scenario_kill_am_on_node1]
log_marker      = Kill AM service on node node1
script          = [testcases.TestFDSServiceMgt.TestRndSvcKill]
param_names     = nodes,services,time_window
params          = node1,am,5-10
delay_wait      = 15

[scenario_join_vol2_io_on_am1_fork]
log_marker      = Join vol2 I/O process for AM1
script          = [join]
join_scenario   = scenario_vol2_io_on_am1_fork

[scenario_attach_vol2]
log_marker      = Attach volume volume2 to the AM on node node2
script          = [volume2]
action          = attach
node            = node2

[scenario_vol2_io_on_am2_fork]
log_marker      = Run some IO on a separate process for am2 and vol2
script          = [fork]
real-script     = [scenario]
fds-scenario    = ../cfg/S3/IO_volume2_CRD_DontRetry_DontVerifyDelete.cfg

[scenario_join_vol1_io_on_am1_fork]
log_marker      = Join vol1 I/O process on AM1
script          = [join]
join_scenario   = scenario_vol1_io_on_am1_fork

[scenario_join_vol2_io_on_am2_fork]
log_marker      = Join vol2 I/O process on AM2
script          = [join]
join_scenario   = scenario_vol2_io_on_am2_fork
