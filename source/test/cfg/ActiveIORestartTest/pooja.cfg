[scenario_verify_nodes_are_up]
log_marker      = Verify nodes nodes are up
script          = [verify]
state           = up

#Test AM stop/remove/add/start service on omnode
#Due to a bug FS-3449
[scenario_stop_am_on_omnode]
log_marker = Stop AM service on node1.
script     = [service]
fds_nodes  = node1
services   = am
action     = stop,remove,add,start
delay_wait = 5

[scenario_TestS3LoadMBLOB]
log_marker      = Test S3 interface by putting blob
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
param_names     = bucket
params          = volume2


#Test DM stop/remove/add/start service on omnode
[scenario_stop_dm_on_omnode]
log_marker = Stop DM service on node1.
script     = [service]
fds_nodes  = node1
services   = dm
action     = stop, remove, add, start
delay_wait = 5


[scenario_TestS3LoadMBLOB]
log_marker      = Test S3 interface by putting blob
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
param_names     = bucket
params          = volume2

#This test is to ensure that we can't add a fds service to a node that already has the same service running
#Run tests against omnode and non-omnode
[scenario_add_existing_am_service]
log_marker      = Verify AM service cannot be added to a node that already has the same service running
script          = [service]
fds_nodes       = node1,node2
action          = add
services		= am
expect_failure  = true
expect_failed_msg = 500: Error adding service to node

[scenario_add_existing_dm_service]
log_marker      = Verify DM service cannot be added to a node that already has the same service running
script          = [service]
fds_nodes       = node1,node2
action          = add
services		= dm
expect_failure  = true
expect_failed_msg = 500: Error adding service to node

[scenario_add_existing_sm_service]
log_marker      = Verify SM service cannot be added to a node that already has the same service running
script          = [service]
fds_nodes       = node1,node2
action          = add
services		= sm
expect_failure  = true
expect_failed_msg = 500: Error adding service to node

#Test SM stop/remove/add/start service on omnode
[scenario_stop_sm_on_omnode]
log_marker = Stop SM service on node1.
script     = [service]
fds_nodes  = node1
services   = sm
action    = stop,remove,add,start
delay_wait = 5


[scenario_TestS3LoadMBLOB]
log_marker      = Test S3 interface by putting blob
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
param_names     = bucket
params          = volume2



#Test AM stop/remove/add/start service on non-omnode
[scenario_stop_amon_nonomnode]
log_marker = Stop AM service on node2.
script     = [service]
fds_nodes  = node2
services   = am
action     = stop,remove,add,start
delay_wait = 5

[scenario_TestS3LoadMBLOB]
log_marker      = Test S3 interface by putting blob
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
param_names     = bucket
params          = volume2

#Remove DM service on node2
[scenario_stop_dm_on_nonomnode]
log_marker = Stop DM service on node2.
script     = [service]
fds_nodes  = node2
services   = dm
#Due to a bug FS-3449
action     = stop,remove,add,start
delay_wait = 5

#Remove SM service on node2
[scenario_stop_smon_nonomnode]
log_marker = Stop SM service on node2.
script     = [service]
fds_nodes  = node2
services   = sm
action     = stop,remove,add,start
delay_wait = 5


[scenario_TestS3LoadMBLOB]
log_marker      = Test S3 interface by putting blob
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
param_names     = bucket
params          = volume2

#Check nodes to make sure all services are running before starting new test
[scenario_verify_nodes_are_up]
log_marker      = Verify nodes nodes are up
script          = [verify]
state           = up

#Test two services AM,DM stop/remove/add/start service on omnode
[scenario_stop_am_dm_on_omnode]
log_marker = Stop AM/DM service on node1.
script     = [service]
fds_nodes  = node1
services   = am,dm
action     = stop,remove,add,start
delay_wait = 5

#Test two services AM,SM stop/remove/add/start service on omnode
[scenario_stop_am_sm_on_omnode]
log_marker = Stop AM/SM service on node1.
script     = [service]
fds_nodes  = node1
services   = am,sm
action     = stop,remove,add,start

#Test two services DM,SM stop/remove/add/start service on omnode
[scenario_stop_dm_sm_on_omnode]
log_marker = Stop DM/SM service on node1.
script     = [service]
fds_nodes  = node1
services   = dm,sm
action     = stop,remove,add,start
delay_wait = 5

[scenario_TestS3LoadMBLOB]
log_marker      = Test S3 interface by putting blob
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
param_names     = bucket
params          = volume2



#Test two services AM,DM stop/remove/add/start service on non-omnode
[scenario_stop_am_dm_on_nonomnode]
log_marker = Stop AM/DM service on node2
script     = [service]
fds_nodes  = node2
services   = am,dm
#Due to bug fs-3449
#action     = stop,remove
action     = stop
delay_wait = 5

[scenario_remove_am_dm_on_nonomnode]
log_marker = Remove AM/DM service on node2
script     = [service]
fds_nodes  = node2
services   = am,dm
#Due to bug fs-3449
#action     = stop,remove
action     = remove
delay_wait = 5

[scenario_add_start_am_dm_on_nonomnode]
log_marker = Add AM/DM service on node2
script     = [service]
fds_nodes  = node2
services   = am,dm
action     = add,start
delay_wait = 5

#Test two services AM,SM stop/remove/add/start service on non-omnode
[scenario_stop_am_sm_on_nonomnode]
log_marker = Stop AM/SM service on node2
script     = [service]
fds_nodes  = node2
services   = am,sm
#Due to bug fs-3449
#action     = stop,remove
action     = stop
delay_wait = 5

[scenario_remove_am_sm_on_nonomnode]
log_marker = Remove AM/SM service on node2
script     = [service]
fds_nodes  = node2
services   = am,sm
#Due to bug fs-3449
#action     = stop,remove
action     = remove
delay_wait = 5

[scenario_add_start_am_sm_on_nonomnode]
log_marker = Add/Start AM/SM service on node2
script     = [service]
fds_nodes  = node2
services   = am,sm
action     = add,start
delay_wait = 5

#Test two services DM,SM stop/remove/add/start service on non-omnode
[scenario_stop_dm_sm_on_nonomnode]
log_marker = Stop DM/SM service on node2
script     = [service]
fds_nodes  = node2
services   = dm,sm
#Due to bug fs-3449
#action     = stop,remove
action     = stop
delay_wait = 5

[scenario_remove_dm_sm_on_nonomnode]
log_marker = Remove DM/SM service on node2
script     = [service]
fds_nodes  = node2
services   = dm,sm
#Due to bug fs-3449
#action     = stop,remove
action     = remove
delay_wait = 5

[scenario_add_start_dm_sm_on_nonomnode]
log_marker = Add DM/SM service on node2
script     = [service]
fds_nodes  = node2
services   = dm,sm
action     = add,start
delay_wait = 5

#Check nodes to make sure all services are running before starting new test
[scenario_verify_nodes_are_up]
log_marker      = Verify nodes nodes are up
script          = [verify]
state           = up
# Comma separated list of nodes.
fds_nodes       = node1,node2,node3,node4,node5,node6,node7,node8

[scenario_TestS3LoadMBLOB]
log_marker      = Test S3 interface by putting blob
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
param_names     = bucket
params          = volume2

#Test three services AM,DM,SM stop/remove/add/start service on omnode
[scenario_stop_am_dm_sm_on_omnode]
log_marker = Stop AM/DM/SM service on node1.
script     = [service]
fds_nodes  = node1
services   = am,dm,sm
action     = stop


#due to a bug, you can't remove/add when all three services are down
#Need to add scenarios when bug is fixed

[scenario_start_am_dm_sm_on_omnode]
log_marker = Start AM/DM/SM service on node1.
script     = [service]
fds_nodes  = node1
services   = am,dm,sm
action     = start


#Check nodes to make sure all services are running before starting new test
[scenario_verify_nodes_are_up]
log_marker      = Verify nodes nodes are up
script          = [verify]
state           = up
# Comma separated list of nodes.
fds_nodes       = node1,node2,node3,node4,node5,node6,node7,node8

[scenario_TestS3LoadMBLOB]
log_marker      = Test S3 interface by putting blob
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
param_names     = bucket
params          = volume2


#Test three services AM,DM,SM stop/remove/add/start service on non-omnode
[scenario_stop_am_dm_sm_on_nonomnode]
log_marker = Stop AM/DM/SM service on node2
script     = [service]
fds_nodes  = node2
services   = am,dm,sm
action     = stop,remove.add,start

#due to a bug, you can't remove/add when all three services are down
#Need to add scenarios when bug is fixed
[scenario_TestS3LoadMBLOB]
log_marker      = Test S3 interface by putting blob
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
param_names     = bucket
params          = volume2


[scenario_verify_nodes_are_up]
log_marker      = Verify nodes nodes are up
script          = [verify]
state           = up

[scenario_closes_s3_connection]
log_marker      = Close the S3 connection
script          = [testcases.TestS3IntFace.TestS3CloseConn]
