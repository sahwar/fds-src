#
# Copyright 2015 Formation Data Systems, Inc.
#
# Test scenarios to:
# 1.  Run IO
# 2.  Remove an omnode
# 3.  Add/Activate omnode
# 4.  Remove a non-omnode
# 5.  Add/Activate non-omnode node
# 6.  Remove multiple non-omnode nodes
# 7.  Add/activate nodes
# NOTE: There is a bug right now where node remove and removing the last service (am, dm, or sm) will
# render the node useless.

[user]
user_name = root
password = passwd

[node1]
om = true
redis = true
influxdb = true
ip = localhost
fds_root = /fds/node1
fds_port = 7000

[node2]
enable=true
ip = localhost
fds_root = /fds/node2
fds_port = 7000

[node3]
enable=true
ip = localhost
fds_root = /fds/node3
fds_port = 7000

[node4]
enable=true
ip = localhost
fds_root = /fds/node4
fds_port = 7000

[node5]
enable=true
ip = localhost
fds_root = /fds/node5
fds_port = 7000

[node6]
enable=true
ip = localhost
fds_root = /fds/node6
fds_port = 7000

[node7]
enable=true
ip = localhost
fds_root = /fds/node7
fds_port = 7000

[node8]
enable=true
ip = localhost
fds_root = /fds/node8
fds_port = 7000

# The 'volume' section defines a volume
[volume_AddRemoveNodeTest]
## Name of the server AM node to attach to
client = node1
### Apparently meant to be a Tenant ID.
id     = 1
### The size of the volume
size   = 10000
### The volume access type, currently either 'object' or 'block'
access = object
##
### The 'volume' section defines a volume
[volume2]
### Name of the server AM node to attach to
client = node1
### Apparently meant to be a Tenant ID.
id     = 2
# The size of the volume
size   = 10000
# The volume access type, currently either 'object' or 'block'
access = object

# The 'volume' section defines a volume
[volume3]
# Name of the server AM node to attach to
client = node1
# Apparently meant to be a Tenant ID.
id     = 3
# The size of the volume
size   = 10000000
# The volume access type, currently either 'object' or 'block'
access = block

# TEST STEPS or CASES or SCENARIOS
# Will be ordered according to scenario name.

[scenario_boot_activate]
log_marker      = Bring up domain
script          = [domain]
action          = install-boot-activate

[scenario_verify_nodes_up]
log_marker      = Verify domain is up
script          = [verify]
state           = up

[scenario_verify_nodes_up]
log_marker      = Verify node node1 is up
script          = [verify]
state           = up
# Comma separated list of nodes.
fds_nodes       = node1,node2,node3,node4

[scenario_create_volume2]
log_marker      = Create volume volume2
script          = [volume2]
action          = create
delay_wait      = 5

[scenario_attach_volume2]
log_marker      = Attach volume
script          = [volume2]
action          = attach

[scenario_get_s3_autho_token]
log_marker      = Get an S3 authorization token
script          = [testcases.TestOMIntFace.TestGetAuthToken]

[scenario_get_s3_connection]
log_marker      = Get an S3 connection
script          = [testcases.TestS3IntFace.TestS3GetConn]

[scenario_put_s3_blob]
# Load some data into volume1 "bucket" using the S3 interface
log_marker      = Test S3 interface by putting blob
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
# Command separated list of parameter names and values
param_names     = bucket
params          = volume2

[scenario_fork_io_workload]
# Run some IO
log_marker      = Fork/run longer IO workload
script          = [fork]
real-script     = [testcases.TrafficGen.RunTrafficGen]
param_names     = hostname,runtime,test_type,username
params          = localhost,3000,PUT,admin


#NOTE: THIS FEATURE IS NOT FULLY FUNCTIONAL YET.  IF YOU REMOVE THE LAST SERVICE (AM, DM, OR SM) ON THE NODE, THE NODE WILL BE
#RENDERED USELESS.  NODE REMOVE WILL ALSO CAUSE THE NODE TO BECOME INOPERABLE.

[scenario_remove_nonnode]
log_marker      = Remove a non-omnode - node4.
script          = [node4]
action          = remove


#Once a node is removed, it cannot be added back into the cluster.
#Currently to add the node back into the cluster it requires some manual process.
#The PM will be marked as removed.
[scenario_add_non_omnode_node4]
log_marker      = Verify removed node cannot be added into the cluster.
script          = [node4]
action          = activate
expect_failure  = true
expect_failed_msg = 500: Error adding service to node

[scenario_verify_nodes_are_up]
log_marker      = Verify the rest of the nodes are up
script          = [verify]
state           = up
# Comma separated list of nodes.
fds_nodes       = node1,node2,node3,node5,node6,node7,node8

[scenario_put_s3_blob]
# Load some data into volume1 "bucket" using the S3 interface
log_marker      = Test S3 interface by putting blob
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
# Command separated list of parameter names and values
param_names     = bucket
params          = volume2

[scenario_fork_io_workload]
# Run some IO
log_marker      = Fork/run longer IO workload
script          = [fork]
real-script     = [testcases.TrafficGen.RunTrafficGen]
param_names     = hostname,runtime,test_type,username
params          = localhost,3000,PUT,admin

[scenario_closes_s3_connection]
log_marker      = Close the S3 connection
script          = [testcases.TestS3IntFace.TestS3CloseConn]

[scenario_kill_and_clean_up]
log_marker      = Kill and cleanup
script          = [domain]
action          = kill-uninst
