#
# Copyright 2015 Formation Data Systems, Inc.
#
# Test scenarios to:
# 1.  Run IO
# 2.  Remove an omnode
# 3.  Add/Activate omnode
# 4.  Remove a non-omnode
# 5.  Add/Activate non-omnode node
# 6.  Remove multiple non-omnode nodes
# 7.  Add/activate nodes
# NOTE: There is a bug right now where node remove and removing the last service (am, dm, or sm) will
# render the node useless.

[user]
user_name = root
password = passwd

[node1]
om = true
redis = true
influxdb = true
ip = localhost
fds_root = /fds/node1
fds_port = 7000

[node2]
enable=true
ip = localhost
fds_root = /fds/node2
fds_port = 7000

[node3]
enable=true
ip = localhost
fds_root = /fds/node3
fds_port = 7000

[node4]
enable=true
ip = localhost
fds_root = /fds/node4
fds_port = 7000


[volume1]
client = node1
id     = 1
size   = 10000
policy = 1
access = object
media = ssd

[volume2]
client = node1
id     = 2
size   = 10000
policy = 1
access = object
media = hdd


[volume3]
client = node1
id     = 3
size   = 10000000
policy = 1
access = block
media = hybrid

# TEST STEPS or CASES or SCENARIOS
# Will be ordered according to scenario name.

#[scenario_boot_activate]
#log_marker      = Bring up domain
#script          = [domain]
#action          = install-boot-activate

[scenario_verify_nodes_up]
log_marker      = Verify domain is up
script          = [verify]
state           = up

[scenario_createVolume1_ssd]
log_marker      = Create volume volume1
script          = [volume1]
action          = create
delay_wait      = 3

[scenario_createVol2_hdd]
log_marker      = Create volume volume2
script          = [volume2]
action          = create
delay_wait      = 3

[scenario_createVol3_block]
log_marker      = Create volume volume3
script          = [volume3]
action          = create
delay_wait      = 10

[scenario_volmedia_11]
log_marker      = Attach volume volume3
script          = [volume3]
action          = attach


[scenario_getAuthToken]
log_marker      = Get an S3 authorization token
script          = [testcases.TestOMIntFace.TestGetAuthToken]

[scenario2_gets3conn]
log_marker      = Get an S3 connection
script          = [testcases.TestS3IntFace.TestS3GetConn]

[scenario_vol1_IO]
log_marker      = Store verifiable object in vol-1
script          = [testcases.TestS3IntFace.TestS3LoadVerifiableObject]
param_names     = bucket
params          = volume1


[scenario_remove_node2]
log_marker      = Remove node2
script          = [node2]
action          = remove
service         = om,om
logentry        = DmtCloseOkEvt Ready for DM Migration, DltCloseOkEvt
maxwait         = 10

[scenario_add_node2]
log_marker      = Add back node2
script          = [node2]
action          = add

[scenario_verifySSD]
log_marker      = Validate object after node2 reboot
script          = [testcases.TestS3IntFace.TestS3CheckVerifiableObject]
param_names     = bucket
params          = volume1


[scenario_remove_node2]
log_marker      = Remove node2
script          = [node2]
action          = remove
service         = om,om
logentry        = DmtCloseOkEvt Ready for DM Migration, DltCloseOkEvt
maxwait         = 10


[scenario_remove_node3]
log_marker      = Remove node3
script          = [node3]
action          = remove
service         = om,om
logentry        = DmtCloseOkEvt Ready for DM Migration, DltCloseOkEvt
maxwait         = 10


[scenario_remove_node4]
log_marker      = Remove node4
script          = [node4]
action          = remove
service         = om,om
logentry        = DmtCloseOkEvt Ready for DM Migration, DltCloseOkEvt
maxwait         = 10

[scenario_vol2_IO]
log_marker      = Store verifiable object in vol-2
script          = [testcases.TestS3IntFace.TestS3LoadVerifiableObject]
param_names     = bucket
params          = volume2

[scenario_verify_vol2HDD]
log_marker      = Validate data on vol2
script          = [testcases.TestS3IntFace.TestS3CheckVerifiableObject]
param_names     = bucket
params          = volume2


[scenario_add_node2]
log_marker      = Add back node2
script          = [node2]
action          = add

[scenario_add_node3]
log_marker      = Add back node2
script          = [node3]
action          = add

[scenario_add_node3]
log_marker      = Add back node4
script          = [node4]
action          = add

[scenario_verify_domain_up]
log_marker      = Verify domain is up
script          = [verify]
state           = up

[scenario_wait_1]
script          = [testcases.TestMgt.TestWait]
delay           = 30
reason          = Let domain settle.

[scenario_volmedia_18]
log_marker      = Load some data into volume3 "bucket" using the S3 interface
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
param_names     = bucket
params          = volume3
