#
# Copyright 2015 Formation Data Systems, Inc.
#
# Test volume functions with different media types as storage medium.
# Test garbage collection for different media types.
#
# Note: Do not embed white space is comma delimited lists - test framework bug.

# TEST RESOURCES and TOPOLOGY
[user]
user_name       = root
password        = passwd

[node1]
om              = true
redis           = true
influxdb        = true
ip              = localhost
fds_root        = /fds/node1
fds_port        = 7000

[node2]
enable          = true
ip              = localhost
fds_root        = /fds/node2
fds_port        = 7100

[node3]
enable          = true
ip              = localhost
fds_root        = /fds/node3
fds_port        = 7200

[node4]
enable          = true
ip              = localhost
fds_root        = /fds/node4
fds_port        = 7300

[policy1]
id    = 1
iops_min = 100
iops_max = 500
priority = 1

[volume1]
client = node1
id     = 1
size   = 10000
access = object

# TEST STEPS or CASES or SCENARIOS
# Will be ordered according to scenario name.

#If --reusecluster parameter is passed then we assume /fds is present , using install-boot-action we just bring up the domain
#if --reusecluster is not passes then we install /fds on all nodes through this scenario
[scenario_domain_install_boot_activate]
log_marker      = Install the domain
script          = [domain]
action          = install-boot-activate

[scenario_verify_nodes_up]
log_marker      = Verify domain is up
script          = [verify]
state           = up

[scenario_create_volume_AddRemoveServiceTest]
log_marker      = Create volume volume_AddRemoveServiceTest
script          = [volume1]
action          = create
delay_wait      = 5

[scenario_attach_volume1]
log_marker      = Attach volume
script          = [volume1]
action          = attach

[scenario_AddRemoveServiceTest_fork]
log_marker      = Fork scenario_AddRemoveServiceTest_fork
script          = [fork]
real-script     = [scenario]
fds-scenario    = ../cfg/aws_tests/AWS_AddRemoveServiceTest.cfg

[scenario_join_AddRemoveServiceTest_fork]
log_marker      = Join "scenario_AddRemoveServiceTest_fork" forked test
script          = [join]
join_scenario   = scenario_AddRemoveServiceTest_fork

#Note if --reusecluster is passed then installation directory on fds nodes WONT get deleted, only nodes will be cleaned up for pristine state,
# if --reusecluster is NOT passed then it deletes /fds
[scenario_kill_clean]
log_marker      = Cleanup from test.
script          = [domain]
action          = kill-uninst
delay_wait      = 60