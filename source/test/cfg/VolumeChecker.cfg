#
# Copyright 2015 Formation Data Systems, Inc.
#
# Defines resource, configuration and steps to test
# Active Migration

[user]
user_name       = root
password        = passwd

# The 'node' section defines a nodes parameters. The section must be prefixed
# with 'node' but is also used as a unique ID for the node.
#
[node1]
# Denotes this node will run an OM. Therefore, it is enabled automatically.
om              = true
# We'll start Redis with this node. Since all the other nodes listed
# here are on the same machine, we don't need to specify Redis for
# boot up on them.
redis           = true
# start influxdb
influxdb        = true
# IP of the node
ip              = localhost
# Fds root directory to use
fds_root        = /fds/node1
# Base port for that node, not needed if we don't run all nodes one physical machine
fds_port        = 7000
# By default we get all services on a node. Otherwise we' specify a 'services' option.

[node2]
enable          = true
ip              = localhost
fds_root        = /fds/node2
fds_port        = 7100
services        = dm,sm

[node3]
enable          = true
ip              = localhost
fds_root        = /fds/node3
fds_port        = 7200
services        = dm,sm

[node4]
enable          = true
ip              = localhost
fds_root        = /fds/node4
fds_port        = 7300
services        = dm,sm

# The 'volume' section defines a volume
[volume1]
# Name of the server AM node to attach to
client = node1
# Apparently meant to be a Tenant ID.
id     = 1
# The size of the volume
size   = 10000
# The volume access type, currently either 'object' or 'block'
access = object

# The 'volume' section defines a volume
[volume2]
# Name of the server AM node to attach to
client = node1
# Apparently meant to be a Tenant ID.
id     = 2
# The size of the volume
size   = 10000
# The volume access type, currently either 'object' or 'block'
access = object

# The 'volume' section defines a volume
[volume3]
# Name of the server AM node to attach to
client = node1
# Apparently meant to be a Tenant ID.
id     = 3
# The size of the volume
size   = 10000000
# The volume access type, currently either 'object' or 'block'
access = block

# TEST STEPS or CASES or SCENARIOS
# Will be ordered according to scenario name.

[scenario_kill_uninst]
log_marker      = First clean up installation areas.
script          = [domain]
action          = kill-uninst

[scenario_enable_volume_grouping_mode_all_nodes]
log_marker      = Change platform.conf to restart killed processes automatically
script          = [testcases.TestFDSEnvMgt.TestModifyPlatformConf]
param_names     = current_string,replace_string,node,applyAll
params          = enable_volumegrouping.*, enable_volumegrouping = true,node1,1

[scenario_enable_4_dm_cluster_size_all_nodes]
log_marker      = Change platform.conf to restart killed processes automatically
script          = [testcases.TestFDSEnvMgt.TestModifyPlatformConf]
param_names     = current_string,replace_string,node,applyAll
params          = volumegrouping_dm_cluster_size.*, volumegrouping_dm_cluster_size = 4,node1,1

[scenario_0_1]
log_marker      = Install
script          = [domain]
action          = install-boot-activate

[scenario_wait_sm4_dlt_close]
log_marker      = Wait for node 4 activation completion
script          = [waitforlog]
fds_node        = node4
service         = sm
logentry        = :NotifyDLTCloseCb
occurrences     = 1
atleastcount      = 1
maxwait         = 240

[scenario_verify_4nodes_up]
log_marker      = Verify nodes node1, 2, 3, and 4 are up
script          = [verify]
state           = up
# Comma separated list of nodes. No white space, please.
fds_nodes       = node1,node2,node3,node4

[scenario_wait_for_4SMs_deployed]
log_marker      = Wait for OM deploy DLT with 4 nodes
script          = [waitforlog]
fds_node        = node1
service         = om
logentry        = OM deployed DLT with 4 nodes
occurrences     = 1
maxwait         = 180

[scenario_wait_for_4DMs_deployed]
log_marker      = Wait for OM deploy DMT with 4 nodes
script          = [waitforlog]
fds_node        = node1
service         = om
logentry        = OM deployed DMT with 4 DMs
occurrences     = 1
maxwait         = 180

[scenario_create_volume1_ungraceful]
log_marker      = Create volume volume1
script          = [volume1]
action          = create
delay_wait      = 5

[scenario_create_volume2_ungraceful]
log_marker      = Create volume volume2
script          = [volume2]
action          = create
delay_wait      = 5

[scenario_getauthtoken_ungraceful]
log_marker      = Get an S3 authorization token
script          = [testcases.TestOMIntFace.TestGetAuthToken]

[scenario_gets3conn_ungraceful]
log_marker      = Get an S3 connection
script          = [testcases.TestS3IntFace.TestS3GetConn]

[scenario_storeverifiableobject_ungraceful]
log_marker      = Store an object that we can later verify
script          = [testcases.TestS3IntFace.TestS3LoadVerifiableObject]
param_names     = bucket
params          = volume1

[scenario_waitforobjectcreation_ungraceful]
log_marker      = Wait for object to propogate in system
script          = [testcases.TestMgt.TestWait]
param_names     = delay,reason
params          = 5,to let created object become available in system

[scenario_checkverifiableobject_ungraceful]
log_marker      = Validate object before we restart the domain
script          = [testcases.TestS3IntFace.TestS3CheckVerifiableObject]
param_names     = bucket
params          = volume1

[scenario_testBlockFioSeqW]
log_marker      = Do block IO for volume3
script          = [testcases.TestBlockIntFace.TestBlockFioSeqW]
param_names     = volume
params          = volume3

[scenario_waitforobjectcreation_ungraceful]
log_marker      = Wait for object to propogate in system
script          = [testcases.TestMgt.TestWait]
param_names     = delay,reason
params          = 5,to let created object become available in system

[scenario_detach_volume]
log_marker      = Detach volume volume3 from node1
script          = [volume3]
action          = detach
delay_wait      = 5

# Not sure why the tenantID is not the same as volume ID, but for volume1, the ID is 3
[scenario_run_vc]
log_marker      = Run VC
script          = [testcases.TestFDSSysVerify.TestVolumeChecker]
param_names     = volumeId
params          = 3

[scenario_run_vc_block]
log_marker      = Run VC on block volume
script          = [testcases.TestFDSSysVerify.TestVolumeChecker]
param_names     = volumeId
params          = 4

[scenario_closes3conn_2_ungraceful]
log_marker      = Close the S3 connection
script          = [testcases.TestS3IntFace.TestS3CloseConn]

# Now clean up installation areas.
[scenario_shutdown_and_clean_domain]
log_marker      = Shutdown and cleanup.
script          = [domain]
action          = kill
