#
# Copyright 2016 Formation Data Systems, Inc.
#

# TEST DESCRIPTION
# After running the FalcorStatsTest with an older version of the
# binaries to create and populate volumes, run this test with
# an upgraded version of the binaries to test whether DM
# can correctly identify volume catalogs needing to be upgraded
# (which should be all of them) and correctly do the upgrade.


[scenario_generate_large_file]
log_marker      = Generate a large file to play with
script          = [testcases.TestMgt.TestGenerateFile]
arg.filename    = falcor_large.generated
# 150M
arg.size        = 157286400


# Set up our S3 authorization and connection
[scenario_get_auth_token]
log_marker      = Get an S3 authorization token
script          = [testcases.TestOMIntFace.TestGetAuthToken]

[scenario_get_connection]
log_marker      = Get an S3 connection
script          = [testcases.TestS3IntFace.TestS3GetConn]



# Compare the same file again on "Volume 1" with the key: falcor2
[scenario_comapre_falcor_vol1_second_time]
log_marker      = Compare file falcor on volume 1 for the second time with a different key
script          = [testcases.TestS3IntFace.TestS3VerifyFBLOB]
arg.bucket      = volumeObj1
arg.key         = falcor2
arg.comparefile = RESOURCES/falcor.png

# Compare the same file on "Volume 2" with multi-part upload using the key: falcor2
[scenario_compare_falcor_vol2_only_time]
log_marker      = Compare file falcor on volume 2 with S3's multi-part upload
script          = [testcases.TestS3IntFace.TestS3VerifyLBLOB]
arg.bucket      = volumeObj2
arg.key         = falcor2
arg.comparefile = RESOURCES/falcor.png

# Compare the large generated file on "Volume 3" with the key: large
[scenario_compare_large_vol3_only_time]
log_marker      = Compare file falcor_large.generated on volume 3 for the one and only time
script          = [testcases.TestS3IntFace.TestS3VerifyFBLOB]
arg.bucket      = volumeObj3
arg.key         = large
arg.comparefile = RESOURCES/falcor_large.generated


[scenario_remove_large_file]
log_marker      = Remove the generated large file
script          = [testcases.TestMgt.TestRemoveFile]
arg.filename    = falcor_large.generated

# Kill nodes so that stats files don't change while we check them.
[scenario_kill_nodes]
log_marker      = Kill domain to check stats output.
script          = [domain]
action          = kill
