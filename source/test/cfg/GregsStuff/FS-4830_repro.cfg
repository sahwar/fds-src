#
# Copyright 2016 Formation Data Systems, Inc.
#

# TEST DESCRIPTION
# This SysTest config expects a domain to be up and running.
#
# Repro of FS-4830 with S3
#
# Deploy latest with the following features enabled:
#   enable_snapshot=true
#   enable_timeline=true
#   periodic_expunge=true
# After deployment, create an S3 volume and copy data to it. Let sit for ~2 hours.
# During the waiting period check the /fds/sys-repo/vol-stats/<volid>/stat_min.log
# Then create a second S3 volume and let sit ~30 minutes.
# Then copy the same data to the second volume as was copied to the first volume.
# Let things stabilize. Review the stat_min.log for both volumes. You should see the
# first volume and second volumes have time slots with the Physical Bytes/Logical Bytes set to zero.


[scenario_generate_large_file]
log_marker      = Generate a large file to play with
script          = [testcases.TestMgt.TestGenerateFile]
arg.filename    = falcor_large.generated
# 150M + 1 (hee hee)
arg.size        = 157286401


# Set up our S3 authorization and connection
[scenario_get_auth_token]
log_marker      = Get an S3 authorization token
script          = [testcases.TestOMIntFace.TestGetAuthToken]

[scenario_get_connection]
log_marker      = Get an S3 connection
script          = [testcases.TestS3IntFace.TestS3GetConn]


[scenario_create_objvol1]
log_marker      = Create first S3 volume, volumeObj1
script          = [volumeObj1]
action          = create


[scenario_load_large_vol1]
log_marker      = Load file falcor_large.generated on volume 1
script          = [testcases.TestS3IntFace.TestS3LoadFBLOB]
arg.bucket      = volumeObj1
arg.verify      = true
arg.inputfile   = RESOURCES/falcor_large.generated
arg.key         = large


[scenario_create_objvol2]
log_marker      = Create volume volumeObj2
script          = [volumeObj2]
action          = create


[scenario_wait_1]
log_marker      = Wait 30 minutes. Monitor stat_min.log
script          = [testcases.TestMgt.TestWait]
arg.delay       = 1800
arg.reason      = to let stat_min.log generate


[scenario_load_large_vol2]
log_marker      = Load file falcor_large.generated on volume 2
script          = [testcases.TestS3IntFace.TestS3LoadFBLOB]
arg.bucket      = volumeObj2
arg.verify      = true
arg.inputfile   = RESOURCES/falcor_large.generated
arg.key         = large


[scenario_wait_2]
log_marker      = Wait 60 minutes. Monitor stat_min.log
script          = [testcases.TestMgt.TestWait]
arg.delay       = 3600
arg.reason      = to let stat_min.log generate


# Terminate nodes so that stats files don't change while we check them.
[scenario_terminate_nodes]
log_marker      = Kill domain to check stats output.
script          = [domain]
action          = kill

[scenario_remove_large_file]
log_marker      = Remove the generated large file
script          = [testcases.TestMgt.TestRemoveFile]
arg.filename    = falcor_large.generated

