#
# Copyright 2014 Formation Data Systems, Inc.
#
# FDS Scenario configuration for running the BuildSmokeTest suite

[user]
user_name       = root
password        = passwd

# The 'node' section defines a nodes parameters. The section must be prefixed
# with 'node' but is also used as a unique ID for the node.
#
[node1]
# Denotes this node will run an OM
om              = true
redis           = true
influxdb        = true
# IP of the node
ip              = localhost
# Fds root directory to use
fds_root        = /fds/node1
# Base port for this node. Not needed if we don't run all nodes one physical machine
fds_port        = 7000
# By default we get all services on a node. Otherwise we' specify a 'services' option.

[node2]
enable          = true
ip              = localhost
fds_root        = /fds/node2
fds_port        = 7100

[node3]
enable          = true
ip              = localhost
fds_root        = /fds/node3
fds_port        = 7200

[node4]
enable          = true
ip              = localhost
fds_root        = /fds/node4
fds_port        = 7300

[scenario_pre_install_clean]
log_marker      = Shut down the domain
script          = [domain]
action          = kill-uninst

[scenario_install_domain]
log_marker      = Bring up the domain (includes installation and Redis boot.)
script          = [domain]
action          = install-boot-activate

[scenario_wait_dlt_completion]
log_marker      = Wait for completion-DLT deployment
script          = [waitforlog]
fds_node        = node1
service         = om
logentry        = OM deployed DLT with 4 nodes
occurrences     = 1
maxwait         = 240

[scenario_verify_domain_is_still_up_1]
log_marker      = Verify domin isup.
script          = [verify]
state           = up

[scenario_java_smoke_test]
log_marker      = Run Java Smoke Test suite.
script          = [testcases.TestFDSSysLoad.TestSmokeLoad]

[scenario_boto_blob_tests]
log_marker      = Run Java Boto BLOB test suite.
script          = [testsuite.BotoBLOBSuite]

[scenario_verify_domain_is_still_up2]
log_marker      = Verify every node is still up.
script          = [verify]
state           = up

[scenario_nbd_blob_tests]
log_marker      = Run NBD test suite.
script          = [testsuite.BlockBlobSuite]

[scenario_verify_domain_is_still_up3]
log_marker      = Verify everyone is still up.
script          = [verify]
state           = up

[scenario_node_resiliancy_tests]
log_marker      = Run resiliency test suite.
script          = [testsuite.NodeResilienceSuite]

#------------ Configs for Restart Tests -------------------------------
[scenario_config]
log_marker      = Modify configs to support restart
script          = [testcases.TestFDSEnvMgt.TestModifyPlatformConf]
arg.current1    = prevent_adding_dm_after_startup.*
arg.replace1    = prevent_adding_dm_after_startup = false

arg.current2    = restart_failed_children_process.*
arg.replace2    = restart_failed_children_processes = true

arg.current3    = allow_service_reregistration.*
arg.replace3    = allow_service_reregistration = true

arg.current4    = max_volume_data.*
arg.replace4    = max_volume_data = 2

arg.current5    = max_metadata_entries.*
arg.replace5    = max_metadata_entries = 2
#------------ End Configs  -------------------------------

[scenario_shutdown_domain]
script          = [domain]
action          = kill

[scenario_activate_domain]
log_marker      = Bring up the domain
script          = [domain]
action          = boot

[scenario_restart_tests]
log_marker      = Run Restart test suite.
script          = [testsuite.RestartSuite]

[scenario_shutdown_domain_and clean_up]
log_marker      = Shut down the domain
script          = [domain]
action          = kill-uninst
