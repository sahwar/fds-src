#
# Copyright 2014 Formation Data Systems, Inc.
#
# FDS Scenario configuration for running the BuildSmokeTest suite

[user]
user_name       = root
password        = passwd

# The 'node' section defines a nodes parameters. The section must be prefixed
# with 'node' but is also used as a unique ID for the node.
#
[node1]
# Denotes this node will run an OM
om              = true
# IP of the node
ip              = localhost
# Fds root directory to use
fds_root        = /fds/node1
# Base port for this node. Not needed if we don't run all nodes one physical machine
fds_port        = 7000
# By default we get all services on a node. Otherwise we' specify a 'services' option.




[scenario_install_and_boot_domain]
log_marker      = Bring up the domain (includes installation and Redis boot.)
script          = [domain]
# The default action is install-boot-activate. Otherwise we'd specify an action option.

[scenario_java_smoke_test]
log_marker      = Run Java Smoke Test suite.
script          = [testcases.TestFDSSysLoad.TestSmokeLoad]

[scenario_boto_blob_tests]
log_marker      = Run Java Boto BLOB test suite.
script          = [testsuite.BotoBLOBSuite]

[scenario_verify_node1_is_still_up1]
log_marker      = Verify everyone is still up.
script          = [verify]
state           = up
# Comma separated list of nodes.
fds_nodes       = node1

[scenario_nbd_blob_tests]
log_marker      = Run NBD test suite.
script          = [testsuite.BlockBlobSuite]

[scenario_verify_node1_is_still_up2]
log_marker      = Verify everyone is still up.
script          = [verify]
state           = up
# Comma separated list of nodes.
fds_nodes       = node1

[scenario_node_resiliancy_tests]
log_marker      = Run resiliency test suite.
script          = [testsuite.NodeResilienceSuite]

[scenario_shutdown]
log_marker      = Shut down the domain
script          = [domain]
action          = shutdown

[scenario_wait_shutdown]
script          = [testcases.TestMgt.TestWait]
param_names     = delay,reason
params          = 10,wait for shutdown

[scenario_shutdown_verify]
log_marker      = Verify shutdown
script          = [verify]
state           = shutdown

[scenario_kill_and_clean_up]
log_marker      = Kill and cleanup
script          = [domain]
action          = kill-uninst
