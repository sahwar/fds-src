#
# Copyright 2015 Formation Data Systems, Inc.
#
# Test domain resilience with killed DMs after domain boot.
#
# Note: Do not embed white space is comma delimited lists - test framework bug.

# TEST RESOURCES and TOPOLOGY

[user]
user_name       = root
password        = passwd

# The 'node' section defines a nodes parameters. The section must be prefixed
# with 'node' but is also used as a unique ID for the node.
#
[node1]
# Denotes this node will run an OM. Therefore, it is enabled automatically.
om              = true
# We'll start Redis with this node. Since all the other nodes listed
# here are on the same machine, we don't need to specify Redis for
# boot up on them.
redis           = true
# start influxdb
influxdb        = true
# IP of the node
ip              = localhost
# Fds root directory to use
fds_root        = /fds/node1
# Base port for that node, not needed if we don't run all nodes one physical machine
fds_port        = 7000
# By default we get all services on a node. Otherwise we' specify a 'services' option.

[node2]
enable          = true
ip              = localhost
fds_root        = /fds/node2
fds_port        = 7100
services        = dm,sm

[node3]
enable          = true
ip              = localhost
fds_root        = /fds/node3
fds_port        = 7200
services        = dm,sm

[node4]
enable          = true
ip              = localhost
fds_root        = /fds/node4
fds_port        = 7300
services        = dm,sm

# The 'policy' section defines a volume policy
#
[policy1]
# iops_min of the policy
iops_min = 100
# iops_max of the policy
iops_max = 500
# priority of the policy
priority = 1

# The 'volume' section defines a volume
[volume1]
# Name of the server AM node to attach to
client = node1
# Apparently meant to be the Tenant ID.
id     = 1
# The size of the volume
size   = 10000
# The volume access type, currently either 'object' or 'block'
access = object

# The 'volume' section defines a volume
[volume2]
# Name of the server AM node to attach to
client = node1
# Apparently meant to be the Tenant ID.
id     = 2
# The size of the volume
size   = 10000
# The volume access type, currently either 'object' or 'block'
access = object

# The 'volume' section defines a volume
[volume3]
# Name of the server AM node to attach to
client = node1
# Apparently meant to be the Tenant ID.
id     = 3
# The size of the volume
size   = 10000000
# The volume access type, currently either 'object' or 'block'
access = block

# TEST STEPS or CASES or SCENARIOS
# Will be ordered according to scenario name.

[scenario_dm_1]
log_marker      = Bring up domain
script          = [domain]
action          = install-boot-activate

[scenario_dm_2]
log_marker      = Verify domain is up
script          = [verify]
state           = up
# Comma separated list of nodes.
fds_nodes       = node1,node2,node3,node4

[scenario_dm_3]
log_marker      = Kill DM service on RANDOM node
script          = [testcases.TestFDSServiceMgt.TestRndSvcKill]
param_names     = nodes,services,time_window
params          = node1 node2 node3 node4,dm,0-30

# Verify non-killed "remote" services are still running
[scenario_dm_4]
script          = [verify]
state           = up
fds_nodes       = node1,node2,node3,node4
delay_wait      = 10

[scenario_dm_5]
log_marker      = Create a volume policy.
script          = [policy1]
action          = create
delay_wait      = 10

[scenario_dm_6]
log_marker      = Create volume volume1
script          = [volume1]
action          = create
delay_wait      = 10

[scenario_dm_7]
log_marker      = Attach volume volume1
script          = [volume1]
action          = attach
delay_wait      = 10

[scenario_dm_8]
log_marker      = Wait for volume create to complete
script          = [waitforlog]
fds_node        = node1
service         = om
logentry        = VolumeFSM VACT_CrtDone for volume1
occurrences     = 1
maxwait         = 240

[scenario_dm_9]
log_marker      = Create volume volume2
script          = [volume2]
action          = create
delay_wait      = 10

[scenario_dm_10]
log_marker      = Attach volume volume2
script          = [volume2]
action          = attach
delay_wait      = 10

[scenario_dm_11]
log_marker      = Wait for volume create to complete
script          = [waitforlog]
fds_node        = node1
service         = om
logentry        = VolumeFSM VACT_CrtDone for volume2
occurrences     = 1
maxwait         = 240

[scenario_dm_12]
log_marker      = Create volume volume3
script          = [volume3]
action          = create
delay_wait      = 10

[scenario_dm_13]
log_marker      = Attach volume volume3
script          = [volume3]
action          = attach
delay_wait      = 10

[scenario_dm_14]
log_marker      = Wait for volume create to complete
script          = [waitforlog]
fds_node        = node1
service         = om
logentry        = VolumeFSM VACT_CrtDone for volume3
occurrences     = 1
maxwait         = 240

[scenario_cleanup]
log_marker      = Kill and uninstall domain
script          = [domain]
action          = kill-uninst

 
