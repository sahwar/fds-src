# The setup portion of the DM Migration Failover test

[scenario_kill_uninst]
log_marker      = First clean up installation areas.
script          = [domain]
action          = kill-uninst

[scenario_install]
log_marker      = Install
script          = [node1]
action          = install

[scenario_disable_restart_failed_children_processes_node1]
log_marker      = Change platform.conf to not restart killed processes automatically
script          = [testcases.TestFDSEnvMgt.TestModifyPlatformConf]
param_names     = current_string,replace_string,node
params          = restart_failed_children_processes.*, restart_failed_children_processes = false,node1

[scenario_change_platform_1]
log_marker      = Change platform.conf
script          = [testcases.TestFDSEnvMgt.TestModifyPlatformConf]
param_names     = current_string,replace_string,node
params          = prevent_adding_dm_after_startup.*,prevent_adding_dm_after_startup = false,node1

[scenario_change_platform_2]
log_marker      = Change global platform.conf
script          = [testcases.TestFDSEnvMgt.TestModifyPlatformConf]
param_names     = current_string,replace_string,node,applyAll
params          = enable_feature.*,enable_feature = true,node1,1

[scenario_change_platform_3]
log_marker      = Change platform.conf
script          = [testcases.TestFDSEnvMgt.TestModifyPlatformConf]
param_names     = current_string,replace_string,node
params          = enable_feature.*,enable_feature = true,node1

[scenario_change_platform_4]
log_marker      = Change global platform.conf
script          = [testcases.TestFDSEnvMgt.TestModifyPlatformConf]
param_names     = current_string,replace_string,node,applyAll
params          = test_delay_start.*,test_delay_start = 60,node1,1

[scenario_change_platform_5]
log_marker      = Change platform.conf
script          = [testcases.TestFDSEnvMgt.TestModifyPlatformConf]
param_names     = current_string,replace_string,node
params          = test_delay_start.*,test_delay_start = 60,node1

[scenario_kill_node1]
log_marker      = Install
script          = [node1]
action          = kill

[scenario_start_node1]
log_marker      = Start a single node domain by bringing up node node1
script          = [node1]
action          = boot-activate

[scenario_verify_node1_up]
log_marker      = Verify node node1 is up
script          = [verify]
state           = up
# Comma separated list of nodes.
fds_nodes       = node1
delay_wait      = 10

[scenario_create_vol1]
log_marker      = Create volume volume1
script          = [volume1]
action          = create
delay_wait      = 10

[scenario_attach_vol1]
log_marker      = Attach volume volume1
script          = [volume1]
action          = attach

[scenario_create_vol2]
log_marker      = Create volume volume2
script          = [volume2]
action          = create
delay_wait      = 10

[scenario_attach_vol2]
log_marker      = Attach volume volume2
script          = [volume2]
action          = attach

[scenario_create_vol3]
log_marker      = Create volume volume3
script          = [volume3]
action          = create
delay_wait      = 10

[scenario_attach_vol3]
log_marker      = Attach volume volume3
script          = [volume3]
action          = attach

[scenario_get_s3_auth]
log_marker      = Get an S3 authorization token
script          = [testcases.TestOMIntFace.TestGetAuthToken]

[scenario_get_s3_conn]
log_marker      = Get an S3 connection
script          = [testcases.TestS3IntFace.TestS3GetConn]

[scenario_load_data_vol1]
log_marker      = Load some data into volume1 "bucket" using the S3 interface
script          = [testcases.TestS3IntFace.TestS3LoadMBLOB]
# Command separated list of parameter names and values
param_names     = bucket
params          = volume1

[scenario_load_data_vol2]
log_marker      = Load some data into volume2 "bucket" using the S3 interface
script          = [testcases.TestS3IntFace.TestS3LoadLBLOB]
# Command separated list of parameter names and values
param_names     = bucket
params          = volume2

[scenario_install_node2]
log_marker      = install on node2
script          = [node2]
action          = install

[scenario_disable_restart_failed_children_processes_node2]
log_marker      = Change platform.conf to not restart killed processes automatically
script          = [testcases.TestFDSEnvMgt.TestModifyPlatformConf]
param_names     = current_string,replace_string,node
params          = restart_failed_children_processes.*, restart_failed_children_processes = false,node2


