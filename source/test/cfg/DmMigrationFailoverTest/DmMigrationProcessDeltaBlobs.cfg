# This is a extended scenario of DmMigrationFailover.cfg to test a specific injection
# point within DM Migration to see if it will fail gracefully.
# DmMigrationSetup.cfg must be run prior to running this test scenario

[scenario_activate_node2b]
log_marker      = Boot and activate node2
script          = [node2]
action          = boot-activate

[scenario_inject_dm_static_migration_failure]
log_marker      = Inject DM Static Migration failure
script          = [testcases.TestFDSServiceMgt.TestServiceInjectFault]
# Command separated list of parameter names and values
param_names     = node,faultName
#params          = node2,sm.exit.before.client.erase
params          = node2,abort.dm.migration.processDeltaBlobs

[scenario_wait_for_node2_activation]
log_marker      = Wait for node 2 activation completion
script          = [waitforlog]
fds_node        = node2
service         = sm
logentry        = :NotifyDLTCloseCb
occurrences     = 1
maxwait         = 240

[scenario_verify_node1_node2_up]
log_marker      = Verify nodes node1 and 2 are up
script          = [verify]
state           = up
# Comma separated list of nodes.
fds_nodes       = node1,node2
delay_wait      = 10

[scenario_verify_dm_processfilter_failed]
log_marker      = Verify DM executor failed
script          = [waitforlog]
fds_node        = node2
service         = dm
logentry        = Processing deltaBlobs failed
occurrences     = 1
maxwait         = 120

[scenario_verify_om_handles_error]
log_marker      = Look for OM to receive error
script          = [waitforlog]
fds_node        = node1
service         = om
logentry        = Sent DM migration abort to 2 DMs
occurrences     = 1
maxwait         = 120

[scenario_verify_dm1_handles_error]
log_marker      = Look for DM to receive error
script          = [waitforlog]
fds_node        = node1
service         = dm
logentry        = DM Migration aborting Migration
occurrences     = 1
maxwait         = 120

[scenario_verify_dm2_handles_error]
log_marker      = Look for DM to receive error
script          = [waitforlog]
fds_node        = node2
service         = dm
logentry        = DM Migration aborting Migration
occurrences     = 1
maxwait         = 120

[scenario_verify_dm1_handles_error_done]
log_marker      = Look for DM to receive error
script          = [waitforlog]
fds_node        = node1
service         = dm
logentry        = DM Migration Manager aborted and cleaned up
occurrences     = 1
maxwait         = 120

[scenario_verify_dm2_handles_error_done]
log_marker      = Look for DM to receive error
script          = [waitforlog]
fds_node        = node2
service         = dm
logentry        = DM Migration Manager aborted and cleaned up
occurrences     = 1
maxwait         = 120


