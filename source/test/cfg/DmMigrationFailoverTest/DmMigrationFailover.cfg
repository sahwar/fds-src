#
# Copyright 2015 Formation Data Systems, Inc.
#
# Defines resource, configuration and steps to test
# Static Migration.
#
# Note: Do not embed white space is comma delimited lists - test framework bug.

# TEST RESOURCES and TOPOLOGY

[user]
user_name       = root
password        = passwd

# The 'node' section defines a nodes parameters. The section must be prefixed
# with 'node' but is also used as a unique ID for the node.
#
[node1]
# Denotes this node will run an OM. Therefore, it is enabled automatically.
om              = true
# We'll start Redis with this node. Since all the other nodes listed
# here are on the same machine, we don't need to specify Redis for
# boot up on them.
redis           = true
# start influxdb
influxdb        = true
# IP of the node
ip              = localhost
# Fds root directory to use
fds_root        = /fds/node1
# Base port for that node, not needed if we don't run all nodes one physical machine
fds_port        = 7000
# By default we get all services on a node. Otherwise we' specify a 'services' option.

[node2]
enable          = true
ip              = localhost
fds_root        = /fds/node2
fds_port        = 7100
services        = dm,sm

[node3]
enable          = true
ip              = localhost
fds_root        = /fds/node3
fds_port        = 7200
services        = dm,sm

[node4]
enable          = true
ip              = localhost
fds_root        = /fds/node4
fds_port        = 7300
services        = dm,sm

# The 'volume' section defines a volume
[volume1]
# Name of the server AM node to attach to
client = node1
# Apparently meant to be the Tenant ID.
id     = 1
# The size of the volume
size   = 10000
# The volume access type, currently either 'object' or 'block'
access = object

# The 'volume' section defines a volume
[volume2]
# Name of the server AM node to attach to
client = node1
# Apparently meant to be the Tenant ID.
id     = 2
# The size of the volume
size   = 10000
# The volume access type, currently either 'object' or 'block'
access = object

# The 'volume' section defines a volume
[volume3]
# Name of the server AM node to attach to
client = node1
# Apparently meant to be the Tenant ID.
id     = 3
# The size of the volume
size   = 10000000
# The volume access type, currently either 'object' or 'block'
access = block

# TEST STEPS or CASES or SCENARIOS
# Will be ordered according to scenario name.

[scenario_setup_system1]
log_marker      = Set up system.
script          = [fork]
real-script     = [scenario]
fds-scenario    = ../cfg/DmMigrationFailoverTest/DmMigrationSetup.cfg

[scenario_setup_system1_join]
log_marker      = Join setup system 
script          = [join]
join_scenario   = scenario_setup_system1

[scenario_run_dm_abort_migration]
log_marker      = Running abort.dm.migration injection test
script          = [fork]
real-script     = [scenario]
fds-scenario    = ../cfg/DmMigrationFailoverTest/DmMigrationAbortDMMigration.cfg

[scenario_join_dm_abort_migration]
log_marker      = Join abort_migration
script          = [join]
join_scenario   = scenario_run_dm_abort_migration

[scenario_clean_after_abort1]
log_marker      = Now shutdown and cleanup.
script          = [domain]
action          = kill-uninst

[scenario_setup_system2]
log_marker      = Set up system.
script          = [fork]
real-script     = [scenario]
fds-scenario    = ../cfg/DmMigrationFailoverTest/DmMigrationSetup.cfg

[scenario_setup_system2_join]
log_marker      = Join setup system 
script          = [join]
join_scenario   = scenario_setup_system2

[scenario_run_dm_abort_processBlobFilterSet]
log_marker      = Running abort.dm.migration.processBlobFilter injection test
script          = [fork]
real-script     = [scenario]
fds-scenario    = ../cfg/DmMigrationFailoverTest/DmMigrationProcessBlobFilter.cfg

[scenario_setup_system3]
log_marker      = Set up system.
script          = [fork]
real-script     = [scenario]
fds-scenario    = ../cfg/DmMigrationFailoverTest/DmMigrationSetup.cfg

[scenario_setup_system3_join]
log_marker      = Join setup system 
script          = [join]
join_scenario   = scenario_setup_system3

[scenario_run_dm_abort_processDeltaBlobs]
log_marker      = Running abort.dm.processDeltaBlobs injection test
script          = [fork]
real-script     = [scenario]
fds-scenario    = ../cfg/DmMigrationFailoverTest/DmMigrationProcessDeltaBlobs.cfg

[scenario_join_dm_processDeltaBlobs]
log_marker      = Join abort_migration
script          = [join]
join_scenario   = scenario_run_dm_abort_processDeltaBlobs

[scenario_clean_after_abort3]
log_marker      = Now shutdown and cleanup.
script          = [domain]
action          = kill-uninst

[scenario_setup_system4]
log_marker      = Set up system.
script          = [fork]
real-script     = [scenario]
fds-scenario    = ../cfg/DmMigrationFailoverTest/DmMigrationSetup.cfg

[scenario_setup_system4_join]
log_marker      = Join setup system 
script          = [join]
join_scenario   = scenario_setup_system4

[scenario_run_dm_abort_deltaBlobDescs]
log_marker      = Running abort.dm.processDeltaBlobDescs injection test
script          = [fork]
real-script     = [scenario]
fds-scenario    = ../cfg/DmMigrationFailoverTest/DmMigrationDeltaBlobDescs.cfg

[scenario_join_dm_abort_deltaBlobDescs]
log_marker      = Join abort_migration
script          = [join]
join_scenario   = scenario_run_dm_abort_deltaBlobDescs

[scenario_shutdown_domain_end]
log_marker      = Now shutdown and cleanup.
script          = [domain]
action          = kill-uninst
