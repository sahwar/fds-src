#
# Copyright 2015 Formation Data Systems, Inc.
#
# TEST RESOURCES and TOPOLOGY
[user]
user_name       = root
password        = passwd

# The 'node' section defines a nodes paramters. The section must be prefixed
# with 'node' but is also used as a unique ID for the node.
#
[node1]
# Denotes this node will run an OM. Therefore, it is enabled automatically.
om              = true
# We'll start Redis with this node. Since all the other nodes listed
# here are on the same machine, we don't need to specify Redis for
# boot up on them.
redis           = true
# IP of the node
ip              = localhost
# Fds root directory to use
fds_root        = /fds/node1
# Base port for that node, not needed if we don't run all nodes one physical machine
fds_port        = 7000
# By default we get all services on a node. Otherwise we' specify a 'services' option.

[node2]
enable          = true
ip              = localhost
fds_root        = /fds/node2
fds_port        = 7100
services        = dm,sm

[node3]
enable          = true
ip              = localhost
fds_root        = /fds/node3
fds_port        = 7200
services        = dm,sm

[node4]
enable          = true
ip              = localhost
fds_root        = /fds/node4
fds_port        = 7300
services        = dm,sm

# TEST STEPS or CASES or SCENARIOS
# Will be ordered according to scenario name.

[scenario_0_0]
log_marker      = Start a single node domain by bringing up node node1
script          = [node1]
action          = install-boot-activate

[scenario_0_1]
log_marker      = Verify node node1 is up
script          = [verify]
state           = up
# Comma separated list of nodes.
fds_nodes       = node1

[scenario_2_0]
log_marker      = Boot and activate a second node in the domain.
script          = [node2]
action          = install-boot-activate

[scenario_2_1]
log_marker      = Verify nodes node1 and 2 are up
script          = [verify]
state           = up
# Comma separated list of nodes.
fds_nodes       = node1,node2

[scenario_2_2]
log_marker      = Wait for node 2 activation completion-DMT deployment
script          = [waitforlog]
fds_node        = node1
service         = om
logentry        = OM deployed DMT with 2 DMs 
occurrences     = 1 
maxwait         = 240

[scenario_2_3]
log_marker      = Wait for node 2 activation completion-DLT deployment
script          = [waitforlog]
fds_node        = node1
service         = om
logentry        = OM deployed DLT with 2 nodes
occurrences     = 1 
maxwait         = 240

[scenario_3_0]
log_marker      = Kill RANDOM service on RANDOM node
script          = [testcases.TestFDSServiceMgt.TestRndSvcKill]
param_names     = nodes,services,time_window
params          = node1 node2,dm sm pm,0-120

[scenario_4_0]
log_marker      = Boot and activate a third node in the domain.
script          = [node3]
action          = install-boot-activate

[scenario_4_1]
log_marker      = Verify nodes node1, 2, and 3 are up
script          = [verify]
state           = up
# Comma separated list of nodes.
fds_nodes       = node1,node2,node3

[scenario_4_2]
log_marker      = Wait for node 3 activation completion-DMT deployment
script          = [waitforlog]
fds_node        = node1
service         = om
logentry        = OM deployed DMT with 3 DMs
occurrences     = 1 
maxwait         = 240

[scenario_4_3]
log_marker      = Wait for node 3 activation completion-DLT deployment
script          = [waitforlog]
fds_node        = node1
service         = om
logentry        = OM deployed DLT with 3 nodes
occurrences     = 1 
maxwait         = 240

[scenario_5_0]
log_marker      = Boot and activate a fourth node in the domain.
script          = [node4]
action          = install-boot-activate

[scenario_5_1]
log_marker      = Verify nodes node1, 2, 3, and 4 are up
script          = [verify]
state           = up
# Comma separated list of nodes. No white space, please.
fds_nodes       = node1,node2,node3,node4

[scenario_5_2]
log_marker      = Wait for node 4 activation completion-DMT deployment
script          = [waitforlog]
fds_node        = node1
service         = om
logentry        = OM deployed DMT with 4 DMs
occurrences     = 1 
maxwait         = 240

[scenario_5_3]
log_marker      = Wait for node 4 activation completion-DLT deployment
script          = [waitforlog]
fds_node        = node1
service         = om
logentry        = OM deployed DLT with 4 nodes
occurrences     = 1 
maxwait         = 240

# Kill node
[scenario_6_0]
log_marker      = Kill node2 of domain
script          = [node2]
action          = remove
delay_wait      = 30

[scenario_5_1]
log_marker      = Verify nodes node1, 3, and 4 are up
script          = [verify]
state           = up
# Comma separated list of nodes. No white space, please.
fds_nodes       = node1,node3,node4

# Kill node
[scenario_6_0]
log_marker      = Kill node3 of domain
script          = [node3]
action          = remove
delay_wait      = 30

[scenario_6_1]
log_marker      = Verify nodes node1 and 4 are up
script          = [verify]
state           = up
# Comma separated list of nodes. No white space, please.
fds_nodes       = node1,node4

# Kill node
[scenario_7_0]
log_marker      = Kill node4 of domain
script          = [node4]
action          = remove
delay_wait      = 30

[scenario_7_1]
log_marker      = Verify nodes node1 is up
script          = [verify]
state           = up
fds_nodes       = node1

[scenario_cleanup]
log_marker      = Kill and uninstall domain
script          = [domain]
action          = kill-uninst
