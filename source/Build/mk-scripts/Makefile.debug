#
# Makefile.debug
# --------------
#
# Modify global variables for debug build.
#
osdep_target         := $(osdep_target).debug

REALLY_NO_OPTIMIZATION_FLAGS := -fno-aggressive-loop-optimizations # Changes behavior on overflow.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-branch-count-reg              # Changes CPU instructions used.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-dce                           # Can be wrong in the presence of bugs (CBWITPOB).
REALLY_NO_OPTIMIZATION_FLAGS += -fno-delete-null-pointer-checks    # CBWITPOB.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-dse                           # CBWITPOB.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-early-inlining                # NO INLINING! Because...
REALLY_NO_OPTIMIZATION_FLAGS += -fno-gcse-lm                       # Changes CPU instructions used.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-inline                        # ...inlining also does things like elide locals.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-ira-hoist-pressure            # Might be irrelevant, but NO HOISTING!
REALLY_NO_OPTIMIZATION_FLAGS += -fno-ivopts                        # Elides and changes instructions. CBWITPOB.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-jump-tables                   # Changes CPU instructions for switch statements.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-move-loop-invariants          # NO HOISTING!
REALLY_NO_OPTIMIZATION_FLAGS += -fno-peephole                      # Exploiting CPU quirks. CBWITPOB.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-prefetch-loop-arrays          # Changes CPU instructions, even GCC manual is ambivalent.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-rename-registers              # Maybe wrong in the presence of bugs?
REALLY_NO_OPTIMIZATION_FLAGS += -fno-short-enums                   # Binary-incompatible with code compiled otherwise.
REALLY_NO_OPTIMIZATION_FLAGS += -fthreadsafe-statics               # Slightly smaller in code that doesn't need to be TS.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-toplevel-reorder              # Elides unused static variable, reorders globals.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-tree-coalesce-vars            # Elides temporaries. CBWITPOB.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-tree-cselim                   # Reorders, violates C++ mem model, CBWITPOB.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-tree-forwprop                 # Reorders and changes instructions. CBWITPOB.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-tree-loop-if-convert          # Reorders and changes instructions. CBWITPOB.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-tree-loop-im                  # Reorders and changes instructions. CBWITPOB.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-tree-loop-optimize            # Reorders and changes instructions. CBWITPOB.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-tree-phiprop                  # NO HOISTING! Reorders and changes. CBWITPOB.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-tree-pta                      # Less analysis means maybe less interference.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-tree-reassoc                  # Elides and vectories.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-tree-scev-cprop               # Elides and changes instructions.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-tree-slp-vectorize            # E&C.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-tree-vect-loop-version        # E&C.
REALLY_NO_OPTIMIZATION_FLAGS += -fno-web                           # E&C.

osdep_kern_cc_flags  +=
osdep_kern_ld_flags  +=
osdep_kern_ar_flags  +=

ifdef REALLY_NO_OPTIMIZATION
    osdep_user_cc_flags  += -O0 -DDEBUG -g3 -gdwarf-4 -fvar-tracking-assignments -fno-inline -DFIU_ENABLE=1
    osdep_user_cpp_flags += -O0 -DDEBUG -g3 -gdwarf-4 -fvar-tracking-assignments -fno-inline -DFIU_ENABLE=1 -rdynamic
    osdep_user_cc_flags  += $(REALLY_NO_OPTIMIZATION_FLAGS)
    osdep_user_cpp_flags += $(REALLY_NO_OPTIMIZATION_FLAGS)
else
    osdep_user_cc_flags  += -Og -DDEBUG -g -DFIU_ENABLE=1
    osdep_user_cpp_flags += -Og -DDEBUG -g -DFIU_ENABLE=1 -rdynamic
endif
osdep_user_ld_flags  += -rdynamic
osdep_user_so_flags  +=
osdep_user_ar_flags  +=

